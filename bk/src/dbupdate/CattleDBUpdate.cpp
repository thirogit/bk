#include "stdafx.h"
#include "CattleDBUpdate.h"

DBUPDATE _dbUpdates[] = 
{
	{
		2011,1,
		"CREATE TABLE versions ( versionof varchar(24) PRIMARY KEY, majorver Integer NOT NULL, minorver Integer NOT NULL );"
		"COMMIT;"
		"insert into versions(versionof,majorver,minorver) values ('DATABASE',2011,1);"
	},
	{
		2011,2,
		"INSERT INTO INOUTREASONS (REASONID, REASONCODE, REASONNAME, INOUTREASON) VALUES (16, 'U', 'URODZENIE ZWIERZÊCIA', 1);"
		"INSERT INTO INOUTREASONS (REASONID, REASONCODE, REASONNAME, INOUTREASON) VALUES (9, 'DO', 'PRZEMIESZCZENIE DO SIEDZIBY STADA', 1);"
		"INSERT INTO INOUTREASONS (REASONID, REASONCODE, REASONNAME, INOUTREASON) VALUES (10, 'Z', 'PRZEMIESZCZENIE Z SIEDZIBY STADA', 1);"
		"INSERT INTO INOUTREASONS (REASONID, REASONCODE, REASONNAME, INOUTREASON) VALUES (11, 'P', 'WWÓZ NA TERYTORIUM RP', 1);"
		"INSERT INTO INOUTREASONS (REASONID, REASONCODE, REASONNAME, INOUTREASON) VALUES (12, 'W', 'WYWÓZ POZA TERYTORIUM RP', -1);"
		"INSERT INTO INOUTREASONS (REASONID, REASONCODE, REASONNAME, INOUTREASON) VALUES (13, 'PD', 'PADNIÊCIE ZWIERZÊCIA', -1);"
		"INSERT INTO INOUTREASONS (REASONID, REASONCODE, REASONNAME, INOUTREASON) VALUES (14, 'ZN', 'ZABICIE Z NAKAZU INS. WET.', -1);"
		"INSERT INTO INOUTREASONS (REASONID, REASONCODE, REASONNAME, INOUTREASON) VALUES (15, 'UB', 'UBÓJ W GOSPODARSTWIE', -1);"
	},
	{
		2011,3,
		"ALTER TABLE STOCKS ADD OFFICIALCODE Varchar(8);"
	},

	{
		2011,4,
		"ALTER TABLE COUNTRIES ADD  currency Char(3);"
		"COMMIT;"		
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 442;"
		"UPDATE countries SET CURRENCY='DKK' WHERE NUMBER = 208;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 372;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 32;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 528;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 46;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 250;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 276;"
		"UPDATE countries SET CURRENCY='GBP' WHERE NUMBER = 826;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 380;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 246;"
		"UPDATE countries SET CURRENCY='SEK' WHERE NUMBER = 752;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 724;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 300;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 196;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 705;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 620;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 370;"
		"UPDATE countries SET CURRENCY='CZK' WHERE NUMBER = 203;"
		"UPDATE countries SET CURRENCY='HUF' WHERE NUMBER = 348;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 703;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 233;"
		"UPDATE countries SET CURRENCY='PLN' WHERE NUMBER = 616;"
		"UPDATE countries SET CURRENCY='LTL' WHERE NUMBER = 440;"
		"UPDATE countries SET CURRENCY='LVL' WHERE NUMBER = 428;"
		"UPDATE countries SET CURRENCY='RUB' WHERE NUMBER = 643;"
		"UPDATE countries SET CURRENCY='CHF' WHERE NUMBER = 756;"
		"UPDATE countries SET CURRENCY='TRY' WHERE NUMBER = 792;"
		"UPDATE countries SET CURRENCY='NOK' WHERE NUMBER = 578;"
		"UPDATE countries SET CURRENCY='UAH' WHERE NUMBER = 804;"
		"UPDATE countries SET CURRENCY='RON' WHERE NUMBER = 642;"
		"UPDATE countries SET CURRENCY='KZT' WHERE NUMBER = 398;"
		"UPDATE countries SET CURRENCY='HRK' WHERE NUMBER = 191;"
		"UPDATE countries SET CURRENCY='BYR' WHERE NUMBER = 112;"
		"UPDATE countries SET CURRENCY='XXX' WHERE NUMBER = 891;"
		"UPDATE countries SET CURRENCY='BGN' WHERE NUMBER = 100;"
		"UPDATE countries SET CURRENCY='ISK' WHERE NUMBER = 352;"
		"UPDATE countries SET CURRENCY='AZN' WHERE NUMBER = 31;"
		"UPDATE countries SET CURRENCY='MKD' WHERE NUMBER = 807;"
		"UPDATE countries SET CURRENCY='GEL' WHERE NUMBER = 239;"
		"UPDATE countries SET CURRENCY='AMD' WHERE NUMBER = 51;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 20;"
		"UPDATE countries SET CURRENCY='CHF' WHERE NUMBER = 438;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 492;"
		"UPDATE countries SET CURRENCY='EUR' WHERE NUMBER = 674;"
		"UPDATE COUNTRIES SET  COUNTRY = 'Bia³oruœ' WHERE NUMBER = 112;"
		"UPDATE COUNTRIES SET  COUNTRY = 'Gruzja' WHERE NUMBER = 239;"		
		"UPDATE RDB$RELATION_FIELDS SET RDB$NULL_FLAG = 1 WHERE RDB$FIELD_NAME = 'CURRENCY' AND RDB$RELATION_NAME = 'COUNTRIES';"
	},

	{   
		2011,5,
		"CREATE TABLE agents\n"
		"(\n"
		"agentid INT NOT NULL PRIMARY KEY,\n"
		"agentname VARCHAR(64) NOT NULL,\n"
		"agentcode VARCHAR(6) NOT NULL,\n"
		"plate VARCHAR(16)\n"
		");"
	},

	{
		2011,6,
		"CREATE GENERATOR GEN_PK_AGENT;"
	},
	
	{
		2011,7,		
		"CREATE TRIGGER BI_AGENT FOR AGENTS\n"
		"ACTIVE BEFORE INSERT\n"
		"AS\n"
		"BEGIN\n"
		"IF(NEW.agentid IS NULL) THEN\n"
		"NEW.agentid = GEN_ID(GEN_PK_AGENT, 1)\\;\n"
		"END;"		
	},

	{
		2011,8,
		"ALTER TABLE INDOCS ADD agent Integer;"
		"ALTER TABLE OUTDOCS ADD agent Integer;"
		"ALTER TABLE INDOCS ADD CONSTRAINT indocsagent_fk FOREIGN KEY (agent) REFERENCES agents(agentid);"
		"ALTER TABLE INDOCS ADD CONSTRAINT outdocsagent_fk FOREIGN KEY (agent) REFERENCES agents(agentid);"
	},

	{	
		2011,9,
		"UPDATE INVOICES SET PAYDUEDAYS = '1' WHERE PAYDUEDAYS IS NULL;"
		"UPDATE RDB$RELATION_FIELDS SET RDB$NULL_FLAG = 1 WHERE RDB$FIELD_NAME = 'PAYDUEDAYS' AND RDB$RELATION_NAME = 'INVOICES';"
	},

	{
		2011,10,
		"alter table INVOICES add constraint CHK_PAYDUEDAYS check (payduedays > 0 AND payduedays <= 365);"
	},

	{
		2011,11,
		"UPDATE CATTLE SET WEIGHT = '1' WHERE WEIGHT IS NULL;"
		"UPDATE RDB$RELATION_FIELDS SET RDB$NULL_FLAG = 1 WHERE RDB$FIELD_NAME = 'WEIGHT' AND RDB$RELATION_NAME = 'CATTLE';"
	},

	{	
		2011,12,
		"ALTER TABLE AGENTS ALTER AGENTCODE TYPE Varchar(8);"
		"ALTER TABLE CATTLE ALTER EAN TYPE Varchar(14);"
		"ALTER TABLE CATTLE ALTER MOTHEREAN TYPE Varchar(14);"	
	},

	{
		2011,13,
		"ALTER TABLE COUNTRIES ADD EAN_LENGTH Integer;"
		"COMMIT;"
		"UPDATE COUNTRIES SET EAN_LENGTH = '14' WHERE EAN_LENGTH IS NULL;"
		"UPDATE RDB$RELATION_FIELDS SET RDB$NULL_FLAG = 1 WHERE RDB$FIELD_NAME = 'EAN_LENGTH' AND RDB$RELATION_NAME = 'COUNTRIES';"
	},
	{
		2011,14,
		"ALTER TABLE COWPRICING ALTER WEIGHT TYPE Numeric(15,5);"
		"ALTER TABLE CATTLE ALTER TERMSELLWEIGHT TYPE Numeric(15,5);"
		"ALTER TABLE CATTLE ALTER TERMBUYWEIGHT TYPE Numeric(15,5);"
		"ALTER TABLE CATTLE ALTER WEIGHT TYPE Numeric(15,5);"
	},
	{
		2011,15,		
		"ALTER TABLE CATTLE ADD HEALTHCERTNO varchar(16);"		
	},
	{
		2011,16,
		"ALTER TABLE INVOICES DROP CONSTRAINT CHK_PAYDUEDAYS;"
		"alter table INVOICES add constraint CHK_PAYDUEDAYS check (payduedays >= 0 AND payduedays <= 365);"
		"ALTER TABLE INVOICES ADD TRANSACTIONPLACE Varchar(48);"
		"ALTER TABLE INVOICES ADD TRANSACTIONDATE Date;"
	},

	{
		2011,17,
		"DROP TABLE firminfo;"
		"CREATE TABLE company("
		"WETIDNO Char(8),"
		"PHONE Varchar(12),"
		"ACCOUNTNO Char(26),"
		"BANKNAME Varchar(50),"
		"REGON Char(9),"
		"WETLICENCENO Varchar(12)"
		");"
	},
	{ 
		2011,18,
		"INSERT INTO company(WETIDNO,PHONE,ACCOUNTNO,BANKNAME,REGON,WETLICENCENO)"
		" VALUES('00000000','000000000000','00000000000000000000000000','','000000000','000000000000');"
	},

	{
		2011,19,
		"CREATE TABLE repo_accounts("
		"ACCOUNT_ID INT NOT NULL PRIMARY KEY,"
		"ACCOUNT_NAME varchar(30) NOT NULL,"
		"REPO_ADDRESS Varchar(100) NOT NULL,"
		"REPO_LOGIN   varchar(50) NOT NULL,"
		"REPO_PASSWORD Varchar(30) NOT NULL"		
		");"
	},
	{
		2011,20,
		"CREATE GENERATOR GEN_PK_REPO_ACCOUNT;"
	},
	
	{
		2011,21,		
		"CREATE TRIGGER BI_REPO_ACCOUNT FOR REPO_ACCOUNTS\n"
		"ACTIVE BEFORE INSERT\n"
		"AS\n"
		"BEGIN\n"
		"IF(NEW.ACCOUNT_ID IS NULL) THEN\n"
		"NEW.ACCOUNT_ID = GEN_ID(GEN_PK_REPO_ACCOUNT, 1)\\;\n"
		"END;"		
	},

	{
		2011,22,
		"ALTER TABLE HENTS DROP CONSTRAINT INTEG_1183;"
		"ALTER TABLE HENTS DROP CONSTRAINT INTEG_1188;"
	},

	{
		2012,1,
		"CREATE TABLE PASSPORT_RECOGNITION_PROFILES\n"
		"(\n"
		"PROFILE_ID INT NOT NULL PRIMARY KEY,\n"
		"PROFILE_NAME VARCHAR(40) NOT NULL,\n"
		"PASSPORT_DIMX INT NOT NULL,\n"
		"PASSPORT_DIMY INT NOT NULL\n"
		");"
	},
	{
		2012,2,
		"CREATE TABLE PASSPORT_PROFILE_FIELDS\n"
		"(\n"
		"PROFILE INT NOT NULL,\n"
		"FIELD_NAME VARCHAR(30) NOT NULL,\n"
		"X INT NOT NULL,\n"
		"Y INT NOT NULL,\n"
		"W INT NOT NULL,\n"
		"H INT NOT NULL,\n"
		"constraint fk_possport_profile_id FOREIGN KEY(PROFILE) references PASSPORT_RECOGNITION_PROFILES(PROFILE_ID)\n"
		");"
	},

	{
		2012,3,
		"CREATE GENERATOR GEN_PK_PASS_RECO_PROFILES;"
	},
	
	{
		2012,4,		
		"CREATE TRIGGER BI_PASS_RECO_PROFILES FOR PASSPORT_RECOGNITION_PROFILES\n"
		"ACTIVE BEFORE INSERT\n"
		"AS\n"
		"BEGIN\n"
		"IF(NEW.PROFILE_ID IS NULL) THEN\n"
		"NEW.PROFILE_ID = GEN_ID(GEN_PK_PASS_RECO_PROFILES, 1)\\;\n"
		"END;"		
	},
	{
		2012,5,
		"ALTER TABLE HENTS DROP COUNTRY;"
		"DROP TABLE COUNTRIES;"
	},
	{
		2012,6,	
		"ALTER TABLE HENTS ADD  henttype2 Char(1);"
	},
	{
		2012,7,
		"update hents set henttype2='I' where henttype=2;"
		"update hents set henttype2='C' where henttype=1;"
	},
	{
		2012,8,
		"ALTER TABLE HENTS DROP HENTTYPE;"	
	},
	{
		2012,9,
		"ALTER TABLE HENTS ALTER HENTTYPE2 TO HENTTYPE;"
	},
	{
		2012,10,
		"UPDATE HENTS SET HENTTYPE = 'I' WHERE HENTTYPE IS NULL;"
		"ALTER TABLE HENTS ADD CONSTRAINT hents_chk_henttype CHECK(HENTTYPE='I' OR HENTTYPE='C');"
		"UPDATE RDB$RELATION_FIELDS SET RDB$NULL_FLAG = 1 WHERE RDB$FIELD_NAME = 'HENTTYPE' AND RDB$RELATION_NAME = 'HENTS';"		
		"DROP TABLE HENTTYPES;"
	},
	{
		2012,11,
		"ALTER TABLE OUTDOCS ADD MOTIVE Char(1) CHARACTER SET ASCII COLLATE ASCII;"
		"ALTER TABLE INDOCS ADD  MOTIVE Char(1) CHARACTER SET ASCII COLLATE ASCII;"
	},
	{
		2012,12,
		"update INDOCS set MOTIVE='B' where REASON = 1;"
		"update INDOCS set MOTIVE='+' where REASON = 2;"
		"update INDOCS set MOTIVE='I' where REASON = 3;"
		"update INDOCS set MOTIVE='+' where MOTIVE is null;"
		"update OUTDOCS set MOTIVE='E' where REASON = 4;"
		"update OUTDOCS set MOTIVE='S' where REASON = 5;"
		"update OUTDOCS set MOTIVE='-' where REASON = 6;"
		"update OUTDOCS set MOTIVE='K' where REASON = 8;"
		"update OUTDOCS set MOTIVE='-' where MOTIVE is null;"
	},
	{
		2012,13,
		"ALTER TABLE INDOCS DROP REASON;"
		"ALTER TABLE OUTDOCS DROP REASON;"
	},
	{
		2012,14,
		"UPDATE RDB$RELATION_FIELDS SET RDB$NULL_FLAG = 1 WHERE RDB$FIELD_NAME = 'MOTIVE' AND RDB$RELATION_NAME = 'OUTDOCS';"
		"UPDATE RDB$RELATION_FIELDS SET RDB$NULL_FLAG = 1 WHERE RDB$FIELD_NAME = 'MOTIVE' AND RDB$RELATION_NAME = 'INDOCS';"
	},	
	{	
		2012,15,
		"ALTER TABLE OUTDOCS ADD CONSTRAINT outdocs_motive_chk CHECK(MOTIVE = '-' OR MOTIVE = 'E' OR MOTIVE = 'D' OR MOTIVE = 'K' OR MOTIVE = 'S');"
		"ALTER TABLE INDOCS ADD CONSTRAINT indocs_motive_chk CHECK(MOTIVE = 'B' OR MOTIVE = '+' OR MOTIVE = 'I');"
	},
	{
		2012,16,
		"DROP TABLE INOUTREASONS;"
	},

	/*{
		2011,15,
			"CREATE TABLE accounts ( accountid INT NOT NULL PRIMARY KEY, accountname VARCHAR(30) NOT NULL,"
			"accountno VARCHAR(26) NOT NULL, bankname VARCHAR(50) ); 
	}*/


	/*{
		2011,2,
		"CREATE TABLE herds ( herdid INT NOT NULL PRIMARY KEY, herdno INT NOT NULL UNIQUE, herdcode VARCHAR(12) NOT NULL UNIQUE,"
		"herdname VARCHAR(64) NOT NULL, ZIP Varchar(10), CITY Varchar(48), STREET Varchar(48), POBOX Varchar(10),"
		"COUNTRY Integer NOT NULL, PHONE Varchar(12), LONGITUDE Numeric(15,12), LATITUDE Numeric(15,12) );"
		"COMMIT;"
		"CREATE GENERATOR GEN_PK_HERDS;"
		"COMMIT;"
		"\"CREATE TRIGGER BI_HERDS_ID FOR HERDS ACTIVE\n"
		"BEFORE INSERT POSITION 0\n"
		"AS\n"
		"BEGIN\n"
		"IF(NEW.herdid IS NULL) THEN \n"
		"NEW.herdid = GEN_ID(GEN_PK_HERDS, 1);\n"
		"END\""
		
	},*/


	/*{
		2011,2,
		"CREATE TABLE invoicepayadvances "
		"( "
		"payadvanceid INT PRIMARY KEY,"
		"invoice INT NOT NULL,"
		"advanceamount NUMERIC(15,5) NOT NULL, "
		"advancedate DATE NOT NULL,"
		"nextadvancedate DATE,"
		"extras VARCHAR(255),"
		"CONSTRAINT invoicepayadvances_invoice_fk  FOREIGN KEY (invoice) REFERENCES invoices (invoiceid)"
		" );"
	},*/

	{0,0,NULL}
};